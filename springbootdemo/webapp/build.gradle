configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

// Test Structure
sourceSets {
    integrationTest {
        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath

    }
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

buildscript{
    ext{
        spring_plugin_version='1.5.10.RELEASE'
    }
    repositories{
        mavenCentral()
    }
    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_plugin_version")
    }
}
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

 /*configurations {
     compile.exclude module: 'tomcat-jdbc'
 }*/

dependencies {
    compile project(":common")
    compile project(":domain")
    compile project(":app")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-security:${spring_plugin_version}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${spring_plugin_version}")
    compile group: 'com.google.guava', name: 'guava', version: '11.0.2'
    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'
    compile group: 'com.h2database', name: 'h2', version: '1.3.148'
    compile group: 'org.immutables', name: 'value', version: '2.5.6'

}